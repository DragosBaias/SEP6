@page "/MovieOverview"
@using Entities
@using SEP6.Temporary
@using Domain
@inject DataSession DataSession
@inject NavigationManager NavigationManager
@inject IApiRetriever TmdbClient
@inherits LayoutComponentBase

<h3 style="text-align: center; color: white">Movie Overview</h3>

<div class="movie-card">
    <div class="poster-container">
        @if (!string.IsNullOrEmpty(DataSession.MovieDetails.PosterPath))
        {
            <img class="poster" src="https://image.tmdb.org/t/p/original/@DataSession.MovieDetails.PosterPath" alt="@DataSession.MovieDetails.Title" />
        }
        else
        {
            <img class="fallback-poster" src="fallback-image.jpg" alt="No Poster Available" />
        }
    </div>
    <div class="movie-details">
        <div class="info-container">
            <h4 class="movie-title">@DataSession.MovieDetails.Title</h4>
            <p><strong>Release Date:</strong> @DataSession.MovieDetails.ReleaseDate</p>
            <p><strong>Director:</strong> @DataSession.MovieDetails.Director</p>
            <p><strong>Vote Average:</strong> @DataSession.MovieDetails.VoteAverage</p>
            <p><strong>Vote Count:</strong> @DataSession.MovieDetails.VoteCount</p>
            <p><strong>Overview:</strong></p>
            <p>@DataSession.MovieDetails.Overview</p>
        </div>
    </div>
</div>

@if (DataSession.MovieDetails.TopActors != null && DataSession.MovieDetails.TopActors.Any())
{
    <div class="cast-container">
        <h4 class="cast-title">Cast</h4>
        <div class="slideshow">
            <div class="slide-container">
                @foreach (var actor in DataSession.MovieDetails.TopActors)
                {
                    <div class="slide" @onclick="()=>OpenCastMemberOverview(actor)">
                        @if (!string.IsNullOrEmpty(actor.ProfilePicturePath))
                        {
                            <img class="cast-image" src="https://image.tmdb.org/t/p/w185/@actor.ProfilePicturePath" alt="@actor.FullName" />
                        }
                        <p class="cast-name">@actor.FullName</p>
                    </div>
                }
            </div>
        </div>
    </div>
}

<div class="back-button">
    <button class="btn-back" @onclick="NavigateBack">Back</button>
</div>

<style>
    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
    }

    body {
        background-image: url('images/Background.jpg');
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        background-attachment: fixed;
        padding: 20px;
    }

    .movie-card {
        display: flex;
        flex-direction: column;
        align-items: center;
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
        background-color: transparent;
        border-radius: 10px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .poster-container {
        width: 50%;
        margin-bottom: 20px;
    }

    .poster, .fallback-poster {
        max-width: 100%;
        max-height: 100%;
    }

    .movie-details {
        width: 100%;
        color: white;
    }

    .info-container {
        padding-top: 20px;
    }

    .movie-title {
        font-size: 24px;
        font-weight: bold;
        margin-bottom: 10px;
        color: white;
    }

    .cast-container {
        margin-top: 30px;
    }

    .cast-title {
        font-size: 20px;
        text-align: center;
        color: white;
    }

    .slideshow {
        display: flex;
        flex-wrap: nowrap;
        overflow-x: scroll;
        margin-top: 20px;
    }

    .slide-container {
        display: flex;
        flex-wrap: nowrap;
    }

    .slide {
        width: 200px;
        margin: 10px;
        text-align: center;
        cursor:pointer;
    }

    .cast-image {
        width: 150px;
        height: 200px;
        object-fit: cover;
        border-radius: 5px;
    }

    .cast-name {
        margin-top: 5px;
        color: white;
    }

    .back-button {
        position: absolute;
        top: 10px;
        right: 10px;
    }

    .btn-back {
        padding: 5px 10px;
        background-color: #ff6b6b;
        color: #fff;
        border: none;
        border-radius: 3px;
        margin: 25px;
        cursor: pointer;
    }
</style>

@code {
    protected override async Task OnInitializedAsync()
    {
        if (DataSession.User == null)
            NavigationManager.NavigateTo("LogIn");
        if (DataSession.MovieDetails != null)
        {
            await LoadCastData();
        }
        else
            NavigationManager.NavigateTo("MovieList");
    }

    private async Task LoadCastData()
    {
        var movieId = DataSession.MovieDetails.Id;
        var credits = await TmdbClient.GetMovieCredits(movieId);

        if (credits != null && credits.Cast != null)
        {
            DataSession.MovieDetails.Credits = credits;
            DataSession.MovieDetails.Director = credits.Crew.First(m => m.Job.Equals("Director")).FullName;
            DataSession.MovieDetails.TopActors = credits.Cast.Take(10).ToList();
        }

        StateHasChanged();
    }

    private async void OpenCastMemberOverview(CastMember castMember)
    {
        DataSession.Actor = await TmdbClient.GetActorInformation(int.Parse(castMember.Id));
        NavigationManager.NavigateTo("ActorOverview");
    }

    private void NavigateBack()
    {
        NavigationManager.NavigateTo(DataSession.LastLink);
    }
}
