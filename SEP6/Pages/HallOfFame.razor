@page "/HallOfFame"
@using Entities
@using SEP6.Temporary
@using Domain
@inject NavigationManager NavigationManager
@inject IApiRetriever _tmdbApiClient
@inject DataSession DataSession

<div class="container">
    @if (_movies.Count == 0)
    {
        <div class="loading-container">
            <img src="images/HallOfFameLoading.jpg" alt="Hall of Fame" class="logo-loading" />
        </div>
    }
    else
    {
        <div class="title-container">
            <img src="images/HallOfFameSimple.jpg" alt="Hall of Fame" class="logo-simple" />
            <h1 class="title">Hall of Fame</h1>
        </div>
        <div class="movie-list">
            @foreach (var movie in _movies)
            {
                @if (movie != null)
                {
                    <div class="movie-card" @onclick="()=> OpenMovieOverview(movie)">
                        <h4 class="title" style="color: white">@movie.ReleaseDate.Substring(0, 4)</h4>
                        <div class="movie-poster-container">
                            @if (!string.IsNullOrEmpty(movie.PosterPath))
                            {
                                <img class="movie-poster" src="https://image.tmdb.org/t/p/w500/@movie.PosterPath" alt="@movie.Title" />
                            }
                            else
                            {
                                <img class="fallback-poster" src="fallback-image.jpg" alt="No Poster Available" />
                            }
                        </div>
                        <div class="movie-details">
                            <h4 class="movie-title">@movie.Title</h4>
                            <div class="movie-info">
                                <p class="movie-release-date"><strong><em>Release Date:</em></strong> <em>@movie.ReleaseDate</em></p>
                                <p class="movie-vote-average"><strong><em>Vote Average:</em></strong> <em>@movie.VoteAverage</em></p>
                                <p class="movie-vote-count"><strong><em>Vote Count:</em></strong> <em>@movie.VoteCount</em></p>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
        
        <div class="back-button">
            <button class="btn-back" @onclick="NavigateBack">Back</button>
        </div>
    }
</div>

<style>
    body {
        background-image: url('images/Background.jpg');
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        background-attachment: fixed;
    }

    .container {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .loading-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
    }

    .title-container {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        margin-bottom: 20px;
    }

    .title {
        text-align: center;
        color: black;
        font-family: "Berlin Sans FB", serif;
        margin: 0;
    }

    .logo-simple {
        width: 300px;
        height: auto;
        margin-bottom: 10px;
    }

    .movie-list {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        align-items: center;
        margin: 0;
        padding: 0;
    }

    .movie-card {
        width: 300px;
        margin: 20px;
        padding: 10px;
        background-color: transparent;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        display: flex;
        flex-direction: column;
        align-items: center;
        cursor: pointer;
    }

    .movie-poster-container {
        height: 400px;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .movie-poster,
    .fallback-poster {
        max-width: 100%;
        max-height: 100%;
    }

    .fallback-poster {
        object-fit: contain;
        background-color: #ddd;
        padding: 10px;
    }

    .movie-details {
        padding: 10px;
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .movie-title {
        font-size: 18px;
        font-weight: bold;
        margin-bottom: 10px;
        word-break: break-word;
        text-align: center;
        color: white;
    }

    .movie-info {
        flex-grow: 1;
    }

    .movie-release-date,
    .movie-vote-average,
    .movie-vote-count {
        margin-bottom: 5px;
        color: white;
    }
    
    .back-button {
            position: absolute;
            top: 10px;
            right: 10px;
            
        }
    
    .btn-back {
          padding: 5px 10px;
          background-color: #ff6b6b;
          color: #fff;
          border: none;
          border-radius: 3px;
          cursor: pointer;
          
        margin: 25px;
        }
</style>

@code {
    private List<MovieDetails> _movies = new List<MovieDetails>();

    protected override async Task OnInitializedAsync()
    {
        if (DataSession.User == null)
            NavigationManager.NavigateTo("LogIn");
        await LoadMovies();
    }

    private async Task LoadMovies()
    {
        _movies = await _tmdbApiClient.GetHoFMovie();
    }

    private void OpenMovieOverview(MovieDetails movie)
    {
        DataSession.MovieDetails = movie;
        DataSession.LastLink = "/HallOfFame";
        NavigationManager.NavigateTo("/MovieOverview");
    }
    
    private void NavigateBack()
    {
        NavigationManager.NavigateTo("/MovieList");
    }
}
