@page "/PublicLists"
@using SEP6.Temporary
@using Domain
@using Entities
@using SEP6.Data
@inject DataSession DataSession
@inject IApiRetriever TmdbClient
@inject IDatabaseRetriever DatabaseRetriever
@inject NavigationManager NavigationManager

<h3 class="title">Public Lists</h3>
<p class="title">Explore the favorite lists of other users.</p>
<button class="back-button" @onclick="GoBack">Back</button>

@if (_shownMovies.Count == 0)
{
    <p class="empty-message">No favorite movies yet.</p>
}
else
{
    <div class="movie-list">
        @foreach (var movieList in _shownMovies)
        {
            @if (movieList.movieDetailsList1.Count > 0)
            {
                <div class="movie-list-box" @onclick="()=> OpenPublicFavouriteList(movieList)">
                    <h3 class="page-title">Favourite list of @movieList.username</h3>
                    <div class="movie-list-movies">
                        @foreach (var movie in movieList.movieDetailsList1.Take(3))
                        {
                            <div class="movie-card" @onclick="() => OpenMovieOverview(movie)">
                                <div class="movie-poster-container">
                                    @if (!string.IsNullOrEmpty(movie.PosterPath))
                                    {
                                        <img class="movie-poster" src="https://image.tmdb.org/t/p/w500/@movie.PosterPath" alt="@movie.Title"/>
                                    }
                                    else
                                    {
                                        <img class="fallback-poster" src="fallback-image.jpg" alt="No Poster Available"/>
                                    }
                                </div>
                                <div class="movie-details">
                                    <h4 class="movie-title">@movie.Title</h4>
                                    <div class="movie-info">
                                        <p class="movie-release-date"><strong>Release Date:</strong> @movie.ReleaseDate</p>
                                        <p class="movie-vote-average"><strong>Vote Average:</strong> @movie.VoteAverage</p>
                                        <p class="movie-vote-count"><strong>Vote Count:</strong> @movie.VoteCount</p>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
            </div>
            }
        }
    </div>
}

@code {
    private List<TempMovieList> _shownMovies = new();

    protected override async Task OnInitializedAsync()
    {
        if (DataSession.User == null)
            NavigationManager.NavigateTo("Login");
        _shownMovies = await LoadLists();
    }

    private async Task<List<TempMovieList>> LoadLists()
    {
        List<User> Users = await DatabaseRetriever.GetUsers();
        List<Entities.MovieList> movieLists = await DatabaseRetriever.GetMovieLists();
        List<TempMovieList> shownMovies = new List<TempMovieList>();

        foreach (var user in Users)
        {
            if(user.MovieList.Movies != null)
            {
                List<MovieDetails> movieDetailsList = new List<MovieDetails>();
                foreach (var movie in user.MovieList.Movies)
                {
                    if(movie != null)
                    {
                        var movieDetails = await TmdbClient.GetMovie(movie.MovieID);
                        movieDetailsList.Add(movieDetails);
                    }
                }
                shownMovies.Add(new TempMovieList { username = user.Username, movieDetailsList1 = movieDetailsList });
            }
        }

        return shownMovies;
    }

    

    private void OpenMovieOverview(MovieDetails movie)
    {
        DataSession.MovieDetails = movie;
        DataSession.LastLink = "/PublicLists";
        NavigationManager.NavigateTo("/MovieOverview");
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/MovieList");
    }

    private void OpenPublicFavouriteList( TempMovieList movieList)
    {
        DataSession.TempMovieList = movieList;
        NavigationManager.NavigateTo("PublicFavouriteList");
    }
}

<style>
     body {
            background-image: url('images/Background.jpg');
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            background-attachment: fixed;
            padding: 20px;
        }
         .page-title {
                color: white;
            }
        
            .empty-message {
                color: white;
            }
        
            .movie-list {
                display: flex;
                flex-wrap: wrap;
                justify-content: center;
                align-items: flex-start;
                
            }
        
            .movie-list-box {
                margin: 20px;
                padding: 10px;
                background-color: #1a1a1a;
                border-radius: 5px;
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        cursor: pointer;
            }
        
            .movie-list-movies {
                display: flex;
                flex-wrap: wrap;
                justify-content: center;
                align-items: center;
            }
        
            .movie-card {
                width: 300px;
                margin: 20px;
                padding: 10px;
                background-color: #222222;
                border-radius: 5px;
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
                display: flex;
                flex-direction: column;
                align-items: center;
                cursor:pointer;
            }
        
            .movie-poster-container {
                height: 400px;
                display: flex;
                justify-content: center;
                align-items: center;
            }
            .title {
                    width: 100%;
                    text-align: center;
                    color: white;
                    font-size: 35px;
                    font-family: Amiri,serif;
                    margin: 30px;
                }
        
            .movie-poster,
            .fallback-poster {
                max-width: 100%;
                max-height: 100%;
            }
        
            .fallback-poster {
                object-fit: contain;
                background-color: #ddd;
                padding: 10px;
            }
        
            .movie-details {
                padding: 10px;
                height: 100%;
                display: flex;
                flex-direction: column;
                justify-content: space-between;
            }
        
            .movie-title {
                font-size: 18px;
                font-weight: bold;
                margin-bottom: 10px;
                word-break: break-word;
                text-align: center;
                color: white;
            }
        
            .movie-info {
                flex-grow: 1;
            }
        
            .movie-release-date,
            .movie-vote-average,
            .movie-vote-count {
                margin-bottom: 5px;
                color: white;
            }

    .invitation {
        color: white;
        font-size: 20px;
        margin-bottom: 20px;
        text-align: center;
    }

    .back-button {
        position: absolute;
        top: 20px;
        right: 20px;
        padding: 10px;
        background-color: #ff6b6b;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        margin: 25px;
    }
</style>
